services:
  ros_base_container:
    build:
      context: .
      dockerfile: ./ros_base_container/Dockerfile
      args:
        DOCKER_USER: ${DOCKER_USER}
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
        
    image: ros_base_container:latest

  ros_container:
    build:
      context: .
      dockerfile: ./ros_container/Dockerfile
      args:
        DOCKER_USER: ${DOCKER_USER}
    image: ros_container:latest
    container_name: ros_container
    hostname: ros_container
    user: ${DOCKER_USER}
    privileged: true # Needed for camera access
    environment:
      CORS_ORIGINS: "http://localhost:3000,http://localhost:8081,http://localhost:8080"
      DISPLAY: ${DISPLAY}
      QT_X11_NO_MITSHM: 1
      ROS_DISTRO: humble
      ROS_VERSION: 2
      ROS_LOCALHOST_ONLY: 0
      RMW_IMPLEMENTATION: rmw_fastrtps_cpp
      ROS_DOMAIN_ID: 0
      DOCKER_USER: ${DOCKER_USER}
      ROS_MASTER_URI: http://localhost:11311
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ./config:/home/${DOCKER_USER}/config # Mount config files
      - ./ros_container/api:/home/${DOCKER_USER}/ros2_ws/src/api # Mount scripts
      - ./data:/home/${DOCKER_USER}/data # For recordings
      - ./ros_container/start_services.sh:/home/${DOCKER_USER}/start_services.sh
      # - ./ros_base_container/pyproject.toml:/home/${DOCKER_USER}/ros2_ws/pyproject.toml
    ports:
      - "8000:8000" # FastAPI port
      - "9090:9090" # ROS2 WebSocket port
    network_mode: host
    depends_on:
      - roscore
      - ros_base_container
    working_dir: /home/${DOCKER_USER}
    entrypoint: ["/bin/bash", "-c", "./start_services.sh"]

  dashboard_container:
    image: node:20
    container_name: dashboard_container
    hostname: dashboard_container
    ports:
      - "3000:3000" # Dashboard UI port
    network_mode: host
    depends_on:
      - ros_container
    volumes:
      - ./dashboard_container/:/app/
    entrypoint: ["/bin/bash", "-c", "cd /app && npm install && npm run dev"]

  roscore:
    image: ros:noetic-ros-core
    command: roscore
    network_mode: host

  ros1_bridge:
    build: ./bridge_container
    command: ros2 run ros1_bridge dynamic_bridge --bridge-all-topics
    restart: unless-stopped
    depends_on:
      - roscore
      - dashboard_container
      - ros_container
    environment:
      ROS_MASTER_URI: "http://localhost:11311"
    network_mode: host

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: camera_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ros_container/init.sql:/docker-entrypoint-initdb.d/init.sql

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - db
    network_mode: host

volumes:
  postgres_data:
